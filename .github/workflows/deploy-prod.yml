name: deploy-staging

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
  GKE_CLUSTER: sandbox
  GKE_ZONE: asia-south1
  DEPLOYMENT_NAME: tattle-debug
  APP_NAME: debug-container-node

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      debug-container-node: ${{steps.filter.outputs.debug-container-node}}

    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
      - uses: dorny/paths-filter@v2.2.0
        id: filter
        with:
          filters: |
            debug-container-node:
              - 'debug-container-node/**/*'

  debug-container-node:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{needs.changes.outputs.debug-container-node=='true'}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT_ID  }}

      - run: |-
          gcloud --quiet auth configure-docker

      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Build
        run: |-
          cd $APP_NAME
          docker build \
            --tag "gcr.io/$PROJECT_ID/$APP_NAME:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$APP_NAME:$GITHUB_SHA"

      - name: Set up Kubectl
        run: |-
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod u+x kubectl
          kubectl version --client
          mkdir -p ~/.local/bin
          mv ./kubectl ~/.local/bin/kubectl
      - name: Deploy
        env:
          K8_TATTLE_DEBUG_ONE: ${{ secrets.K8_TATTLE_DEBUG_ONE }}
          K8_TATTLE_DEBUG_TWO: ${{ secrets.K8_TATTLE_DEBUG_TWO }}
        run: |-
          cd debug-container-node/k8
          ls
          echo "
          images:
          - name: IMAGE-NAME
            newName: gcr.io/$PROJECT_ID/$APP_NAME
            newTag: $GITHUB_SHA
          secretGenerator:
          - name: tattle-debug
            literals:
            - USERNAME=$K8_TATTLE_DEBUG_ONE
            - PASSWORD=$K8_TATTLE_DEBUG_TWO
          " >> kustomization.yml
          cat kustomization.yml
          kubectl kustomize . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
